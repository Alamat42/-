#include <stdio.h> 
//This calculator wos to written with comrad from t.me/ruworm 
double chtod(char c);             //take char and return double
double add();                     //1 lvl, addition, subtraction and brackets closing
double mul();                     //2 lvl, multiplication and division
double brc();                     //3 lvl, brackets processing
double number();                  //4 lvl, char to number processing
#define MAX 2000                  //maximum string size 
char str[MAX];                    //input array
int ind=0;                        //index 
int main()
{
    int i=0;
    while( (str[i]=getchar())!='\n')
    {
        ++i;
    }
    printf("=%g\n", add());
}
double add()
{
    double num=mul();
    while(str[ind]=='+'||str[ind]=='-')
    {
        if(str[ind]=='+')
        {
            ind++;
            num=num+mul();
        }
        if(str[ind]=='-')
        {
            ind++;
            num=num-mul();
        }
    }
    if(str[ind]==')')
    {
        ++ind;
        return num;
    }
    return num;
}

double mul()
{
    double num=brc();
    while(str[ind]=='*'||str[ind]=='/')
    {
        if(str[ind]=='*')
        {
            ++ind;
            num=num*brc();
        }
        if(str[ind]=='/')
        {
            ++ind;
            num=num/brc();
        }
    }
    return num;
}

double brc()
{
    double num=number();
    if(str[ind]=='(')
    {
        ++ind;
        return add();
    }
    return num;
}

double number()
{
    int point=1;
    double num=0;
    while ((str[ind]>='0'&&str[ind]<='9')||str[ind]=='.'||str[ind]==',')
    {
        if(str[ind]>='0'&&str[ind]<='9')
        {
            if(point==1)
            {
                num=(num*10+chtod(str[ind]));
            }
            else if(point>1)
            {
                num=num+chtod(str[ind])/point;
                point=point*10;
            }
        }
        else
        {
            point=point*10;
        }
        ++ind;
    } 
    return num;
}

double chtod(char c)
{
    if(c<48||c>57)
    {
        return 0;
    }
    else
    {
    double p=c-48;
    return p;
    }
}
